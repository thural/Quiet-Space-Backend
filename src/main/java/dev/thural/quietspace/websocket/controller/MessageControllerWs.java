package dev.thural.quietspace.websocket.controller;

import dev.thural.quietspace.model.request.MessageRequest;
import dev.thural.quietspace.model.response.MessageResponse;
import dev.thural.quietspace.service.MessageService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;

@Slf4j
@Controller
@RequiredArgsConstructor
public class MessageControllerWs {

    private final SimpMessagingTemplate template;
    private final MessageService messageService;
    private static final String MESSAGE_PATH = "/messages";


    // mapped as "/app/public/messages"
    @MessageMapping("/public/messages")
    @SendTo("/public/messages")
    MessageRequest sendMessageToAll(final MessageRequest message) {
        log.info("received message at public topic: {}", message.getText());
        return message;
    }


    @MessageMapping("/private/messages")
    void sendMessageToUser(@Payload MessageRequest message) {
        log.info("received message at private/messages: {}, sent by: {}", message.getText(), message.getSenderId());
        MessageResponse savedMessage = messageService.addMessage(message);
        // will send to /user/private/messages-<session-id>, session-id is autogenerated at login
        template.convertAndSendToUser(String.valueOf(message.getRecipientId()), MESSAGE_PATH, savedMessage);
    }
}
